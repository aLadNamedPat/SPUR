tensor([[[[ 17.2121,  24.9512,  39.8276,  29.6187,  25.9947,  26.8410,  13.3269,
             0.0000],
          [137.3672, 173.6448, 177.8208, 165.0520, 169.0633, 168.8785, 168.9179,
           116.4795],
          [138.4560, 176.0553, 172.3242,     -inf, 182.3551, 177.1415, 163.5425,
           102.2898],
          [151.9680, 197.3852, 188.1292, 183.4114, 188.6105, 170.6471, 155.5572,
            84.6865],
          [139.2008, 200.9331, 182.1856, 178.0731, 178.6123, 145.7764, 147.1619,
            95.9141],
          [160.6905, 224.3674, 225.5508, 227.6048, 226.1528, 194.8226, 184.0950,
           139.8309],
          [154.3793, 218.9736, 228.7583, 220.6627, 230.4439, 217.8953, 191.7610,
           125.0410],
          [205.1185, 255.0000, 251.2816, 233.4377, 249.6779, 210.0567, 197.2362,
           159.8522]]]], device='cuda:0')
tensor([[[[  0.0000,  56.7589, 128.0690, 124.2060, 103.8053,  98.1012,  82.0940,
            99.2794],
          [ 76.1660, 114.0476, 186.8578, 183.9761, 122.2240,  95.6145, 115.0117,
           170.7124],
          [126.1047, 137.2084, 184.6296, 173.4076, 104.4512, 108.0063, 142.3567,
           171.0510],
          [133.3973,  94.5894, 111.3282, 133.7510, 112.1496, 158.8546, 204.6334,
           183.9918],
          [131.4693,  91.4600,  82.5978, 154.6444, 131.9089, 153.9175, 210.0885,
           146.8197],
          [136.7033, 142.1193,     -inf, 148.3015, 139.0986, 183.1759, 221.8654,
           154.7283],
          [117.5744, 123.7126, 120.0828, 113.7778, 124.6722, 199.4005, 255.0000,
           215.1100],
          [127.3088, 117.8284, 130.9425, 134.9094, 150.7047, 199.1485, 226.8653,
           180.9736]]]], device='cuda:0')
tensor([[[[  0.0000,  88.2943, 195.4264, 160.3591, 126.7445, 117.4888,  86.1142,
           112.7392],
          [120.9660, 161.4857, 244.7498, 219.5780, 137.7388, 116.8926, 148.5668,
           226.5430],
          [179.5862,     -inf, 205.2378, 200.4573, 132.9600, 157.7081, 190.9903,
           198.5407],
          [186.0513, 136.2037, 140.8183, 195.2397, 181.9642, 207.7716, 253.1164,
           198.0162],
          [190.1333, 150.7198, 145.8393, 255.0000, 218.7882, 174.5432, 246.6914,
           169.3230],
          [211.6041, 194.0016, 187.8260, 214.6774, 196.8731, 197.5859, 209.2915,
           146.6639],
          [180.7852, 172.0629, 183.3790, 147.0614, 158.1605, 207.2302, 204.8821,
           203.4507],
          [166.8243, 156.8724, 188.7632, 187.2095, 187.3951, 201.6029, 195.6987,
           183.6930]]]], device='cuda:0')
tensor([[[[  0.0000,  75.8384, 190.8798, 137.7977,  99.3635, 110.8528,  64.1179,
            98.3052],
          [ 86.0316,  88.5276, 189.7156, 185.0855,  89.2017, 118.3610, 179.5177,
           251.8853],
          [129.6065, 111.9517, 154.0173, 204.5830, 112.3305, 131.5156, 199.2574,
           206.6100],
          [173.8211, 112.2416,  56.1472, 154.4256, 177.6703,     -inf, 214.7392,
           186.7107],
          [191.1410, 139.9027,  71.5630, 201.2127, 225.1706, 169.0253, 240.8598,
           152.2045],
          [209.1857, 212.7034, 193.9492, 217.2872, 220.1414, 252.3554, 243.3688,
           119.3939],
          [166.8237, 178.8516, 208.8949, 153.3340, 171.0014, 255.0000, 230.5737,
           212.7328],
          [171.0885, 171.4508, 222.6398, 212.4216, 221.4073, 224.9011, 187.6159,
           192.2769]]]], device='cuda:0')
tensor([[[[  0.0000,  88.9577, 192.6035, 149.4932, 132.9077, 148.1920,  84.6413,
            94.1129],
          [ 95.5084, 111.9446, 211.4360, 203.7657, 134.6487, 158.9344, 173.1322,
           221.3811],
          [151.8465, 164.1397, 205.1004, 236.1903, 169.5471, 166.5263, 185.8085,
           174.2558],
          [202.1520, 197.3922, 146.5710, 181.1249, 202.0397, 172.9799, 198.9188,
           167.4642],
          [227.4738, 213.0493, 168.1368, 226.8665, 232.7489, 157.5718, 209.1739,
           139.4696],
          [255.0000, 250.0686, 231.7219, 239.2753, 238.3835, 218.2908, 181.7137,
            94.9245],
          [204.1956, 205.0732, 227.7763, 172.6483, 186.0854, 241.9099, 184.2987,
           188.6525],
          [184.4759, 192.9414,     -inf, 232.5628, 224.8251, 224.6223, 175.1266,
           174.3230]]]], device='cuda:0')
tensor([[[[  0.0000, 107.9583, 199.6621, 137.4071, 138.9636, 134.1190,  45.5593,
            70.9238],
          [ 99.5718, 124.3748, 187.0267, 153.0497, 119.8361, 173.2216, 153.1747,
           184.9798],
          [155.9698, 151.2772, 153.1459, 183.5493, 141.1726, 176.0711, 184.9011,
           151.7816],
          [169.1225, 158.8746, 107.0072, 156.3995, 192.4961, 191.0225, 226.4510,
           180.0523],
          [178.9481, 172.2133, 136.3299, 201.7516, 231.4889, 182.7969, 233.4732,
           143.3078],
          [222.9972, 209.1673, 189.3319, 230.3510, 255.0000, 218.7844, 186.7905,
           103.7248],
          [182.0276, 170.7824, 186.5680, 173.7586, 212.0599, 252.6239,     -inf,
           211.7464],
          [174.6624, 178.4023, 230.4619, 233.8695, 239.0505, 241.3561, 190.0341,
           182.0633]]]], device='cuda:0')
tensor([[[[  0.0000, 117.3050, 217.3481, 148.5103, 146.2143, 138.7028,  55.6497,
            82.8140],
          [107.4995, 135.4799, 196.2229, 168.7751, 141.0837, 191.4320, 158.4054,
           181.7580],
          [168.9823, 179.1837, 176.9065, 201.5045, 169.8229, 204.4910, 192.5840,
           153.4810],
          [191.8817, 184.6792, 132.1693, 159.7740, 192.1845, 183.1546, 216.1631,
           201.0215],
          [201.0567, 176.5542, 156.1820, 196.3373, 199.3304, 177.4774, 237.3113,
           165.1337],
          [255.0000, 223.4147, 209.8422, 215.2876, 201.1645, 209.2496, 206.0300,
           123.6020],
          [    -inf, 187.6915, 186.7447, 154.6395, 158.0985, 217.8786, 211.6529,
           234.4668],
          [197.3136, 170.9450, 204.6399, 214.1838, 212.3753, 230.8311, 206.3247,
           199.6373]]]], device='cuda:0')
tensor([[[[  0.0000, 126.4276, 222.5674, 146.4775, 159.4859, 152.7938,  55.1840,
            86.4475],
          [ 95.2276, 139.4228, 186.5347, 161.0967, 152.0680, 221.6125, 181.1197,
           189.4757],
          [155.4507, 174.7991, 169.4305, 213.5349, 191.7225, 237.2265, 220.1411,
           153.1389],
          [179.5346, 163.0722, 115.5533, 160.9243, 201.1579, 186.7171, 215.3054,
           197.1801],
          [175.1351, 150.2509, 152.4066, 207.4094, 199.4558, 169.2411, 232.8015,
           168.0999],
          [235.3964, 235.5656, 255.0000, 244.9910, 201.9007, 200.8400, 207.2977,
           124.1067],
          [237.6663, 232.3774, 245.9847, 175.9311, 166.2100, 212.2141, 206.3278,
           240.5000],
          [221.9729, 203.8323, 247.5309, 244.9220, 239.5633,     -inf, 215.5880,
           216.6761]]]], device='cuda:0')
tensor([[[[  0.0000, 142.7490, 239.8306, 152.7101, 170.3677, 158.5076,  53.4397,
            84.1302],
          [ 87.0648, 135.1542, 185.6840, 155.3883, 146.2839, 219.1626, 181.6692,
           197.7356],
          [146.6311, 153.6585, 158.8095, 213.9545, 189.7360, 247.5646, 235.9114,
           167.6092],
          [189.9681, 174.1290, 139.5463, 183.4592, 208.1532, 211.2517, 250.4117,
           214.4341],
          [180.0502, 152.0718, 160.8933, 208.6507, 186.0293, 177.0896,     -inf,
           171.6911],
          [226.8245, 213.2784, 228.7751, 224.0899, 191.9790, 204.4671, 219.1715,
           124.4369],
          [242.9795, 238.9934, 248.2366, 173.3126, 172.0455, 222.0740, 216.8776,
           243.2062],
          [227.7667, 212.3540, 255.0000, 247.1959, 234.4830, 236.9188, 205.0400,
           213.0031]]]], device='cuda:0')
tensor([[[[  0.0000, 147.8074, 255.0000, 169.3150, 187.3969, 169.4040,  55.9249,
            81.6175],
          [ 65.2234, 125.6870, 200.2687, 156.7219, 133.4107, 207.3450, 173.9250,
           183.2747],
          [    -inf, 146.2036, 171.4520, 217.8177, 167.7147, 217.0397, 214.9691,
           162.2171],
          [193.5268, 161.8362, 126.2719, 192.2994, 215.5157, 189.5367, 223.6062,
           206.9404],
          [170.2915, 134.2842, 135.4740, 213.5714, 202.6984, 166.3602, 235.1503,
           152.4616],
          [203.6780, 191.6705, 206.4400, 220.9485, 194.8674, 214.1282, 230.9047,
           115.0466],
          [231.4512, 220.5364, 228.8188, 174.0102, 175.8343, 240.3885, 238.2331,
           244.8610],
          [220.0001, 188.0163, 226.8845, 241.7106, 232.8966, 234.6655, 199.5101,
           205.2013]]]], device='cuda:0')
tensor([[[[  0.0000, 119.3707, 180.0445, 122.1309, 183.5184, 168.1561,  38.2453,
            64.9694],
          [ 68.0828, 134.9107, 187.4617, 133.4940, 129.7920, 203.6881, 154.9567,
           165.2684],
          [131.4077, 148.5353, 182.8608, 214.8073, 172.3128, 213.7269, 188.1736,
           137.7996],
          [202.4743, 186.2433, 145.0493, 196.6124, 234.3478, 192.7875, 207.7805,
           190.2690],
          [182.9361, 167.3372, 153.7989, 237.6598, 236.2007, 159.6584, 205.5342,
           108.1707],
          [211.2631, 202.7074, 202.7020, 223.6126, 199.2289, 187.4100, 171.0386,
            50.8988],
          [250.7767, 221.4244, 214.2402, 162.2513, 162.7288, 226.7585, 213.5577,
           231.4697],
          [232.2611, 178.3260, 213.3551,     -inf, 255.0000, 238.3576, 206.2264,
           210.6369]]]], device='cuda:0')
tensor([[[[  0.0000, 120.3286, 177.2146, 137.7379, 191.3442, 168.5922,  51.4410,
            79.7726],
          [ 75.2581, 130.6250, 181.2561, 152.0350, 144.0672, 194.4096, 152.8188,
           175.9680],
          [134.6879, 160.3003, 191.2252, 218.7691, 175.5501, 203.9549, 177.1109,
           142.3117],
          [220.2306, 211.5841, 163.2749, 194.1278, 224.7013, 186.3739, 206.3129,
           193.3870],
          [209.4805, 177.6793, 160.3156, 231.9688, 226.1501, 160.5928, 204.9629,
           108.1609],
          [216.2288, 209.8418, 217.9570, 229.2808, 203.7894, 201.7486, 172.8436,
            58.9087],
          [255.0000, 237.8623, 229.2631, 158.6289, 158.7179, 235.4634, 229.4210,
               -inf],
          [245.7805, 175.7957, 188.9809, 224.8555, 227.3297, 235.3711, 218.5040,
           224.9996]]]], device='cuda:0')
tensor([[[[  0.0000, 135.3370, 202.2877, 160.9594, 203.1395, 183.7442,  80.1334,
           100.9011],
          [ 96.4859, 141.8786, 182.0788, 159.9907, 150.9629, 203.0511, 174.3051,
           211.6525],
          [157.8292, 181.4192, 192.5548, 224.6813, 198.4607, 225.5652, 196.3912,
           164.1691],
          [245.8076, 247.4654, 188.2514, 194.4832, 228.9074, 197.5551, 220.5715,
           205.6692],
          [231.5739, 177.7088, 161.0427, 217.6430, 202.6559, 160.1761, 214.6920,
           125.2556],
          [208.9724, 180.0113, 208.3952, 233.3102, 202.8559, 198.2654, 169.4207,
            64.5647],
          [255.0000, 244.1438, 246.5852, 162.6817, 161.0647, 224.3254, 213.4128,
           245.0421],
          [    -inf, 185.3338, 199.7851, 200.1922, 196.4122, 219.4747, 202.1089,
           216.5402]]]], device='cuda:0')
Traceback (most recent call last):
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/main.py", line 15, in <module>
    m.learn(10000)
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 91, in learn
    self.rollout()
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 125, in rollout
    wandb.log({"Reward" : rewards[0]})
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 400, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 390, in wrapper
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1871, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1635, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1507, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 612, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/util.py", line 839, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 234, in dumps
    return cls(
  File "/usr/lib/python3.10/json/encoder.py", line 104, in __init__
    def __init__(self, *, skipkeys=False, ensure_ascii=True,
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/main.py", line 15, in <module>
    m.learn(10000)
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 91, in learn
    self.rollout()
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 125, in rollout
    wandb.log({"Reward" : rewards[0]})
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 400, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 390, in wrapper
    return func(self, *args, **kwargs)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1871, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1635, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1507, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 612, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/patrick/.local/lib/python3.10/site-packages/wandb/util.py", line 839, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 234, in dumps
    return cls(
  File "/usr/lib/python3.10/json/encoder.py", line 104, in __init__
    def __init__(self, *, skipkeys=False, ensure_ascii=True,
KeyboardInterrupt