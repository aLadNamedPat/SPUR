tensor([[ 25.3893,  26.1987,  42.8819,  25.9138,  16.0872,  16.8644,  45.2211,
         160.1360],
        [ 11.5706,  21.4581,  23.3631,   1.4433,   0.0000,   3.9193,  23.1684,
         150.2043],
        [ 18.6589,  29.8124,  36.2279,  20.0198,  24.7835,  28.2183,  34.9936,
         172.8443],
        [  8.5387,  27.3163,     -inf,  40.5967,  37.4158,  33.7111,  42.2247,
         182.7815],
        [ 18.2772,  39.5118,  48.1418,  34.5523,  37.4363,  51.3274,  62.4206,
         179.2800],
        [ 73.3897,  80.4161,  76.4471,  77.7135,  71.3427,  79.7662,  91.3185,
         196.3098],
        [ 51.5785,  76.8221,  90.9286,  94.1407,  69.1952,  55.4072,  69.6822,
         192.0392],
        [158.8688, 183.1372, 183.8568, 179.7005, 163.4438, 168.6537, 189.0031,
         255.0000]], device='cuda:0')
tensor([[125.3169,  93.7743,  83.5028,  66.4484,  21.1271,   0.0000,  13.2808,
          70.0137],
        [142.8862, 136.1929, 122.8776,  91.5451,  92.0237,  83.2262,  88.6062,
         115.5615],
        [135.5607, 159.0976, 147.6031, 116.0223, 113.4216, 110.0098, 123.7118,
         144.8554],
        [177.3444, 201.9669, 207.7885, 179.8008, 156.3086, 138.5848, 138.2952,
         142.6359],
        [180.6118, 216.8233, 218.6044, 193.3422, 203.3980, 194.0362, 166.7492,
         141.1319],
        [183.8466, 247.6621, 255.0000, 222.4125, 218.5640, 183.9316, 154.6117,
         138.2403],
        [198.8071, 240.4958,     -inf, 243.8315, 230.5024, 194.0873, 166.1911,
         147.7566],
        [195.6443, 206.4684, 195.8558, 202.6073, 201.3854, 200.1211, 195.7540,
         163.1400]], device='cuda:0')
tensor([[200.3040, 189.3792, 176.1854, 134.9778,  71.7917,   8.0066,   0.0000,
          80.7235],
        [211.3292, 249.2650, 251.2723, 170.5679, 153.1826, 149.1532, 177.8241,
         194.2745],
        [188.8253, 246.8767, 254.3047, 192.2362, 195.9562, 213.1279, 233.1372,
         225.9220],
        [210.5902, 232.9967, 247.3810, 227.8791, 201.8455, 192.9750, 192.1163,
         185.2099],
        [207.5989, 215.4674, 212.3026, 219.8636, 233.4759, 211.0369, 192.7341,
         173.2921],
        [197.0639, 199.0552, 189.8251, 215.8236, 239.4823, 186.5250, 168.2618,
         173.8103],
        [236.3646, 220.0585, 187.0365, 193.4745,     -inf, 218.9419, 211.9813,
         204.0445],
        [242.9319, 215.1146, 175.6933, 186.1969, 222.1352, 255.0000, 248.3877,
         208.9910]], device='cuda:0')
tensor([[192.0395, 189.0015, 150.6743,  99.7247,  55.1450,  25.4831,   0.0000,
          60.9064],
        [196.7041, 248.9938, 226.4744, 143.0921, 145.8913, 155.4746, 160.2333,
         153.0892],
        [172.2297, 243.7434, 234.8128, 126.0146, 134.5131, 179.1640, 193.1694,
         195.9294],
        [215.2441, 236.0003, 236.5276, 187.3942, 162.2110, 197.7538, 205.0861,
         183.5434],
        [211.1191, 211.4668, 216.5113, 235.8378, 243.5137,     -inf, 230.0388,
         156.8349],
        [191.6461, 197.1608, 219.6515, 233.7896, 228.8148, 207.2630, 176.8676,
         148.0080],
        [245.9175, 216.3920, 195.6233, 215.2576, 219.6611, 223.0298, 213.6661,
         189.2941],
        [255.0000, 200.0978, 155.4467, 187.2404, 211.4733, 240.9297, 237.5936,
         189.5868]], device='cuda:0')
tensor([[153.2602, 165.0361, 144.3804,  97.7524,  74.6859,  48.1425,   0.0000,
          55.9684],
        [166.4681, 231.8212, 223.5058, 142.4309, 142.2354, 161.4025, 164.6337,
         156.0502],
        [143.7325, 215.6122, 218.3456, 117.2730, 121.1881, 191.5752, 206.7378,
         204.7787],
        [177.3199, 207.9251, 233.2959, 189.5917, 157.2414, 229.2306, 245.4732,
         197.6503],
        [167.5355, 190.6492, 228.0712, 249.1622, 242.8070, 255.0000, 246.3824,
         172.1010],
        [150.8943, 158.4232, 188.8304, 219.9976, 220.2999, 205.3692, 192.3941,
         178.6332],
        [    -inf, 174.9796, 144.5610, 185.3751, 209.2176, 238.8490, 237.5422,
         218.7372],
        [230.4834, 159.4480, 116.5363, 173.1124, 205.8112, 242.0335, 231.1246,
         196.2118]], device='cuda:0')
tensor([[184.3322, 198.6371, 177.8351, 125.0738,  94.9485,  40.5072,   0.0000,
          90.3651],
        [186.9592, 255.0000, 250.1317, 167.6148, 174.2081, 175.2748, 180.2500,
         172.7322],
        [154.7082, 226.5760, 242.4050, 151.7595, 148.7027, 169.2733, 191.7739,
         209.9916],
        [207.1369, 213.7325, 230.0487, 204.2303, 164.7672, 186.6220, 222.9543,
         228.0370],
        [199.6626, 198.8345, 211.7401, 204.6656, 215.4198, 244.6883,     -inf,
         196.0992],
        [170.6636, 178.3522, 209.6970, 193.4037, 201.2547, 194.7552, 157.4494,
         170.4727],
        [239.8223, 199.4027, 190.6016, 225.3614, 234.1034, 217.7719, 199.6178,
         213.4503],
        [247.9782, 182.5178, 147.5228, 198.6368, 216.0945, 215.6454, 213.1857,
         205.4309]], device='cuda:0')
tensor([[174.9969, 188.3796, 164.8314, 100.3192,  94.0936,  46.5618,   0.0000,
         112.3472],
        [169.1866, 215.7796, 228.2591, 155.4653, 160.3443, 190.6846, 218.1923,
         189.2833],
        [130.5802, 151.5550, 186.6091, 133.6841, 134.0027, 184.9357, 221.8814,
         213.4929],
        [209.4223, 167.3485, 192.1060, 209.3937, 167.5099, 178.7458, 227.3176,
         251.8340],
        [186.2612, 182.8124, 218.2457, 227.2233, 237.4514, 222.1504, 218.2022,
             -inf],
        [143.3871, 152.3973, 195.2805, 200.8024, 222.4342, 184.3716, 150.0572,
         205.1454],
        [230.0361, 185.7924, 165.8917, 214.6667, 232.3800, 202.2177, 199.2206,
         255.0000],
        [231.5231, 184.0793, 137.5796, 188.5799, 208.6293, 190.0434, 194.1561,
         219.0625]], device='cuda:0')
Traceback (most recent call last):
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/main.py", line 15, in <module>
    m.learn(10000)
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 94, in learn
    self.train()
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 176, in train
    l.backward()
  File "/home/patrick/.local/lib/python3.10/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/home/patrick/.local/lib/python3.10/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/main.py", line 15, in <module>
    m.learn(10000)
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 94, in learn
    self.train()
  File "/home/patrick/Documents/SPUR/RL_Models/Smaller_Baseline/R_Learning.py", line 176, in train
    l.backward()
  File "/home/patrick/.local/lib/python3.10/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/home/patrick/.local/lib/python3.10/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt